// MIXINS
// large desktop
@mixin lg {
	@media screen and (max-width: $lg-max) {
		@content;
	}
}
// desktop
@mixin md {
	@media screen and (max-width: $md-max) {
		@content;
	}
}
// tablet
@mixin sm {
	@media screen and (max-width: $sm-max) {
		@content;
	}
}
// mobile
@mixin xs {
	@media screen and (max-width: $xs-max) {
		@content;
	}
}
// small mobile
@mixin xxs {
	@media (max-width: $xxs-max) {
		@content;
	}
}
// desktop landscape
@mixin mdX {
	@media screen and (max-width: $md-max) and (orientation: landscape) {
		@content;
	}
}
// tablet landscape
@mixin smX {
	@media screen and (max-width: $sm-max) and (orientation: landscape) {
		@content;
	}
}
// mobile landscape
@mixin xsX {
	@media screen and (max-width: $xs-max) and (orientation: landscape) {
		@content;
	}
}

@mixin maxW($args) {
	@media (max-width: $args) {
		@content;
	}
}
@mixin minW($args) {
	@media (min-width: $args) {
		@content;
	}
}
@mixin minH($args) {
	@media (min-height: $args) {
		@content;
	}
}
@mixin maxH($args) {
	@media (max-height: $args) {
		@content;
	}
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($str) {
	animation: #{$str};
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
}
@mixin transform($args) {
	transform: $args;
	-webkit-transform: $args;
	-moz-transform: $args;
	-ms-transform: $args;
	-o-transform: $args;
}

@mixin transform-origin($args) {
	transform-origin: $args;
	-webkit-transform-origin: $args;
	-moz-transform-origin: $args;
	-ms-transform-origin: $args;
	-o-transform-origin: $args;
}
@mixin transition-delay($args) {
	transition-delay: $args;
	-webkit-transition-delay: $args;
	-moz-transition-delay: $args;
	-ms-transition-delay: $args;
	-o-transition-delay: $args;
}

@mixin transition($args) {
	transition: $args;
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
}
@mixin text($font-size, $font-family, $line-height, $color, $text-transform: none, $letter-spacing: normal) {
	font-size: $font-size;
	font-family: $font-family;
	line-height: $line-height;
	color: $color;
	text-transform: $text-transform;
	letter-spacing: $letter-spacing;
}

@mixin font-size($sizeValue: 1.6) {
	font-size: ($sizeValue * 10) + px;
	font-size: $sizeValue + rem;
}

@mixin mid($flex: false) {
	@if $flex == false {
		top: 50%;
		left: 50%;
		@include transform(translate(-50%, -50%));
		position: absolute;
	} @else {
		display: flex;
		align-items: center;
		justify-content: center;
	}
}

@mixin midimg($maxwidth: initial) {
	max-width: $maxwidth;
	min-width: 100%;
	min-height: 100%;
	object-fit: cover;
	@include mid;
}

@mixin fullscreen($fixed: false) {
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	@if $fixed {
		position: fixed;
	} @else {
		position: absolute;
	}
}

@mixin visible($param: 1) {
	@if $param == 1 {
		opacity: 1;
		pointer-events: auto;
		visibility: visible;
	} @else {
		opacity: 0;
		pointer-events: none;
		visibility: hidden;
	}
}
@mixin br($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;
}
@mixin circle {
	border-radius: 50%;
}
@mixin radiuscorner($all: null, $tl: $all, $tr: $all, $btr: $all, $btl: $all) {
	border-top-left-radius: $tl;
	border-top-right-radius: $tr;
	border-bottom-right-radius: $btr;
	border-bottom-left-radius: $btl;
}

@mixin overtext($lines) {
	display: -webkit-inline-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	text-overflow: ellipsis;
	overflow: hidden;
}

@mixin customscroll($width: 5px, $bgTrack: #000, $bgThumb: #ddd) {
	&::-webkit-scrollbar {
		width: $width;
	}
	&::-webkit-scrollbar-track {
		background: $bgTrack;
	}
	&::-webkit-scrollbar-thumb {
		background: $bgThumb;
	}
}

@mixin absoluteCenter($direction: "left") {
	position: absolute;
	@if $direction == "left" {
		left: 50%;
		transform: translateX(-50%);
	}
	@if $direction == "top" {
		top: 50%;
		transform: translateY(-50%);
	}
}

@mixin flexbox($justify: flex-start, $align: stretch, $direction: row, $wrap: nowrap) {
	display: flex;
	justify-content: $justify;
	align-items: $align;
	flex-direction: $direction;
	flex-wrap: $wrap;
}

@mixin positionabsolute($top: null, $right: null, $bottom: null, $left: null) {
	position: absolute;
	top: $top;
	left: $left;
	right: $right;
	bottom: $bottom;
}

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
	@if $inset {
		box-shadow: inset $top $left $blur $color;
	} @else {
		box-shadow: $top $left $blur $color;
	}
}

@mixin bgImage($norepeat: no-repeat, $position: center, $size: cover) {
	background-repeat: $norepeat;
	background-position: $position;
	background-size: $size;
}

@mixin pseudo($display: block, $content: "") {
	content: $content;
	display: $display;
}
@mixin triangle($direction: up, $size: 5px, $color: #000000) {
	content: "";
	position: absolute;
	display: inline-block;

	@if $direction == up {
		border-right: $size solid transparent;
		border-left: $size solid transparent;
		border-bottom: $size solid $color;
		border-top: none;
	}

	@if $direction == down {
		border-right: $size solid transparent;
		border-left: $size solid transparent;
		border-top: $size solid $color;
		border-bottom: none;
	}

	@if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		border-right: none;
	}

	@if $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		border-left: none;
	}
}

@mixin sliderAnimation($pos, $delay) {
	opacity: 0;
	visibility: hidden;
	@include transition(0.6s);
	@include transform(translateX($pos));
	@include transition-delay($delay);
}
